{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { AppCorePlugin, AppInfo, DeviceResult } from './definitions';\n\nexport class AppCoreWeb extends WebPlugin implements AppCorePlugin {\n  getAppInfo(): Promise<AppInfo> {\n    throw new Error('Method not implemented.');\n  }\n  async device(): Promise<DeviceResult> {\n    try{\n      return {\n        uuid: await this.getUUID(),\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n        isVirtual: false,\n        productName: this.fnBrowserDetect(),\n        osVersion: navigator.appVersion\n      }\n    } catch(e) {\n      throw new Error('Method not implemented.');\n    }\n  }\n  async getDeviceCurrentTheme(): Promise<any> {\n    const body = await document.getElementsByTagName('body')[0];\n    const classList = body.classList;\n    return {currentTheme: classList.contains('dark') ? 'dark' : (classList.contains('light') ? 'light' : 'default')};\n  }\n  copyText(inputData: { text: string; }): Promise<void> {\n    console.log(inputData);\n    \n    throw new Error('Method not implemented.');\n  }\n  pasteText(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n\n  private getUUID(): string {\n    var d = new Date().getTime();//Timestamp\n    var d2 = ((typeof performance !== 'undefined') && performance.now && (performance.now()*1000)) || 0;//Time in microseconds since page-load or 0 if unsupported\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16;//random number between 0 and 16\n        if(d > 0){//Use timestamp until depleted\n            r = (d + r)%16 | 0;\n            d = Math.floor(d/16);\n        } else {//Use microseconds since page-load if supported\n            r = (d2 + r)%16 | 0;\n            d2 = Math.floor(d2/16);\n        }\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n  }\n\n  private fnBrowserDetect(){\n                 \n    let userAgent = navigator.userAgent;\n    let browserName;\n    \n    if(userAgent.match(/chrome|chromium|crios/i)){\n        browserName = \"chrome\";\n      }else if(userAgent.match(/firefox|fxios/i)){\n        browserName = \"firefox\";\n      }  else if(userAgent.match(/safari/i)){\n        browserName = \"safari\";\n      }else if(userAgent.match(/opr\\//i)){\n        browserName = \"opera\";\n      } else if(userAgent.match(/edg/i)){\n        browserName = \"edge\";\n      }else{\n        browserName=\"No browser detection\";\n      }\n    \n     return browserName;    \n  }\n}\n"]}